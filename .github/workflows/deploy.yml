name: Deploy Medusa Application

on:
  push:
    branches:
      - master

permissions:
  id-token: write  # Add this permission
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}  
          aws-region: ${{ secrets.AWS_REGION }} 
          audience: sts.amazonaws.com        

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t medusa-app:latest .  # Use a descriptive name

      - name: Tag Docker image
        run: |
          docker tag medusa-app:latest ${{ steps.ecr-login.outputs.registry }}/medusa-app:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.ecr-login.outputs.registry }}/medusa-app:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5  # Change to your desired version

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Apply
        run: terraform apply  # Removed -auto-approve for manual approval

      - name: Deploy Medusa Application on ECS Fargate
        run: |
          # Assuming you have a task definition for ECS Fargate
          aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
